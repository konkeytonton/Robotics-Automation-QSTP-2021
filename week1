import numpy as np
import matplotlib.pyplot as plt
import math
class Unicycle:
    def __init__(self, x: float, y: float, theta: float, dt: float):
        self.x = x
        self.y = y
        self.theta = theta
        self.dt = dt

        # Store the points of the trajectory to plot
        self.x_points = [self.x]
        self.y_points = [self.y]

    def step(self, v: float, w: float, n: int):
        self.theta=self.theta+w*n*self.dt
        for i in range(n):
            self.x=self.x+v*self.dt*math.cos(w*i*self.dt)
            self.x_points.append(self.x)

        for j in range(n):
            self.y=self.y+v*self.dt*math.sin(w*j*self.dt)
            self.y_points.append(self.y)
        return print(self.x, self.y, self.theta)

    def plot(self, v: float, w: float):
        plt.title(f"Unicycle Model: {v}, {w}")
        plt.xlabel("X-Coordinates")
        plt.ylabel("Y-Coordinates")
        plt.plot(self.x_points, self.y_points, color="red", alpha=0.75)
        plt.grid()
        # If you want to view the plot uncomment plt.show() and comment out plt.savefig(
        plt.show()
        plt.savefig(f"Unicycle_{v}_{w}.png")
        # If you want to save the file, uncomment plt.savefig() and comment out plt.show()
        # plt.savefig(f"Unicycle_{v}_{w}.png")

if __name__ == "__main__":
    print("Unicycle Model Assignment")

p1=Unicycle(0,0,1.57,0.2)
p1.step(.5,1,10)
p1.plot(1,.5)
    # make an object of the robot and plot various trajectories
